# Generated by Django 5.2.4 on 2025-07-23 20:32

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('cc', '0149_samplepool_is_reference'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='historicalinstrument',
            name='is_vaulted',
            field=models.BooleanField(default=False, help_text="True if this instrument is in a user's import vault"),
        ),
        migrations.AddField(
            model_name='historicalinstrument',
            name='user',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Owner of this instrument', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalproject',
            name='is_vaulted',
            field=models.BooleanField(default=False, help_text="True if this project is in a user's import vault"),
        ),
        migrations.AddField(
            model_name='historicalprotocolmodel',
            name='is_vaulted',
            field=models.BooleanField(default=False, help_text="True if this protocol is in a user's import vault"),
        ),
        migrations.AddField(
            model_name='historicalstorageobject',
            name='is_vaulted',
            field=models.BooleanField(default=False, help_text="True if this storage object is in a user's import vault"),
        ),
        migrations.AddField(
            model_name='historicalstoredreagent',
            name='is_vaulted',
            field=models.BooleanField(default=False, help_text="True if this reagent is in a user's import vault"),
        ),
        migrations.AddField(
            model_name='historicaltag',
            name='is_vaulted',
            field=models.BooleanField(default=False, help_text="True if this tag is in a user's import vault"),
        ),
        migrations.AddField(
            model_name='historicaltag',
            name='user',
            field=models.ForeignKey(blank=True, db_constraint=False, help_text='Owner of this tag', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='instrument',
            name='is_vaulted',
            field=models.BooleanField(default=False, help_text="True if this instrument is in a user's import vault"),
        ),
        migrations.AddField(
            model_name='instrument',
            name='user',
            field=models.ForeignKey(blank=True, help_text='Owner of this instrument', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owned_instruments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='is_vaulted',
            field=models.BooleanField(default=False, help_text="True if this project is in a user's import vault"),
        ),
        migrations.AddField(
            model_name='protocolmodel',
            name='is_vaulted',
            field=models.BooleanField(default=False, help_text="True if this protocol is in a user's import vault"),
        ),
        migrations.AddField(
            model_name='storageobject',
            name='is_vaulted',
            field=models.BooleanField(default=False, help_text="True if this storage object is in a user's import vault"),
        ),
        migrations.AddField(
            model_name='storedreagent',
            name='is_vaulted',
            field=models.BooleanField(default=False, help_text="True if this reagent is in a user's import vault"),
        ),
        migrations.AddField(
            model_name='tag',
            name='is_vaulted',
            field=models.BooleanField(default=False, help_text="True if this tag is in a user's import vault"),
        ),
        migrations.AddField(
            model_name='tag',
            name='user',
            field=models.ForeignKey(blank=True, help_text='Owner of this tag', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owned_tags', to=settings.AUTH_USER_MODEL),
        ),
    ]
