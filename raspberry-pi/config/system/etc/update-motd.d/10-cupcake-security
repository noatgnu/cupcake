#!/bin/bash
# Dynamic MOTD for CUPCAKE Pi images with security check

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Function to check if default password is still in use
check_default_password() {
    # Check if cupcake user still has default password
    # This is a heuristic - check password change date vs system install date
    local passwd_change=$(sudo chage -l cupcake 2>/dev/null | grep "Last password change" | cut -d: -f2 | xargs)
    local system_install=$(stat -c %Y /etc/passwd)
    
    # If password was changed after system setup, assume it's been changed
    if [ -n "$passwd_change" ] && [ "$passwd_change" != "never" ]; then
        # Parse date and compare (this is approximate)
        return 1  # Password likely changed
    fi
    
    # Check if SSH keys exist (alternative authentication)
    if [ -f "/home/cupcake/.ssh/authorized_keys" ] && [ -s "/home/cupcake/.ssh/authorized_keys" ]; then
        return 1  # SSH keys configured
    fi
    
    return 0  # Default password likely still in use
}

# Function to get system info
get_system_info() {
    local pi_model=$(cat /proc/device-tree/model 2>/dev/null | tr -d '\0' | sed 's/Raspberry Pi /Pi /')
    local temp=$(vcgencmd measure_temp 2>/dev/null | cut -d= -f2 || echo "N/A")
    local uptime=$(uptime -p | sed 's/up //')
    
    echo "System: $pi_model | Temp: $temp | Uptime: $uptime"
}

# Function to check service status
get_service_status() {
    local web_status="‚ùå"
    local worker_status="‚ùå"
    local db_status="‚ùå"
    
    if systemctl is-active --quiet cupcake-web; then web_status="‚úÖ"; fi
    if systemctl is-active --quiet cupcake-worker; then worker_status="‚úÖ"; fi
    if systemctl is-active --quiet postgresql; then db_status="‚úÖ"; fi
    
    echo "Services: Web $web_status | Worker $worker_status | Database $db_status"
}

# Main MOTD output
echo -e "${CYAN}"
cat << "EOF"
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó   ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù
‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  
‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  
‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë     ‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
 ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù      ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
echo -e "${NC}"

echo -e "${CYAN}üßÅ CUPCAKE ARM64 Pre-built Image - Laboratory Management System${NC}"
echo -e "${GREEN}üìä 2M+ Pre-loaded Scientific Ontologies Ready${NC}"
echo ""

# System information
echo -e "${CYAN}$(get_system_info)${NC}"
echo -e "${CYAN}$(get_service_status)${NC}"
echo ""

# Access information
echo -e "${GREEN}Access Points:${NC}"
echo "  Web Interface: http://cupcake-pi.local:8000"
echo "  SSH Access:    ssh cupcake@cupcake-pi.local"
echo ""

# Security check and warning
if check_default_password; then
    echo -e "${RED}üîí CRITICAL SECURITY WARNING - DEFAULT PASSWORDS DETECTED!${NC}"
    echo -e "${RED}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
    echo -e "${YELLOW}‚ö†Ô∏è  This system is using DEFAULT PASSWORDS - CHANGE NOW!${NC}"
    echo ""
    echo -e "${YELLOW}Current defaults:${NC}"
    echo -e "  ${RED}‚Ä¢ SSH Login: cupcake / cupcake123${NC}"
    echo -e "  ${RED}‚Ä¢ Web Admin: admin / cupcake123${NC}"
    echo ""
    echo -e "${GREEN}TO SECURE THIS SYSTEM RIGHT NOW:${NC}"
    echo -e "  ${CYAN}1.${NC} Change SSH password:    ${GREEN}sudo passwd cupcake${NC}"
    echo -e "  ${CYAN}2.${NC} Change web password:    Go to web interface ‚Üí Admin ‚Üí Users"
    echo -e "  ${CYAN}3.${NC} Setup SSH keys:         ${GREEN}ssh-copy-id cupcake@cupcake-pi.local${NC}"
    echo -e "  ${CYAN}4.${NC} Enable firewall:        ${GREEN}sudo ufw enable${NC}"
    echo ""
    echo -e "${RED}‚ö†Ô∏è  DO NOT use this system in production with default passwords!${NC}"
    echo -e "${RED}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
else
    echo -e "${GREEN}üîí Security Status: Custom passwords/SSH keys detected ‚úÖ${NC}"
    echo -e "${GREEN}Additional hardening recommendations:${NC}"
    echo "  ‚Ä¢ Enable firewall: sudo ufw enable"
    echo "  ‚Ä¢ Regular updates: sudo apt update && sudo apt upgrade"
    echo "  ‚Ä¢ Monitor logs: sudo journalctl -f -u cupcake-*"
fi

echo ""

# Pre-loaded databases info
echo -e "${GREEN}Pre-loaded Scientific Databases:${NC}"
echo "  ‚Ä¢ MONDO Disease Ontology    ‚Ä¢ NCBI Taxonomy (2M+ species)"
echo "  ‚Ä¢ ChEBI Compounds           ‚Ä¢ UniProt Annotations"
echo "  ‚Ä¢ MS Ontologies            ‚Ä¢ Cell Types & Tissues"
echo ""

# Quick commands
echo -e "${GREEN}Quick Commands:${NC}"
echo "  System Status: sudo systemctl status cupcake-*"
echo "  View Logs:     sudo journalctl -f -u cupcake-web"
echo "  Resources:     htop"
echo "  Restart Web:   sudo systemctl restart cupcake-web"
echo ""

# Documentation
echo -e "${CYAN}Documentation: https://github.com/noatgnu/cupcake/tree/master/raspberry-pi${NC}"
echo ""