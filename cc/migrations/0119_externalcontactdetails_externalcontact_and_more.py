# Generated by Django 5.2 on 2025-05-04 18:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('cc', '0118_metadatatabletemplate_field_mask_mapping'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExternalContactDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_method_alt_name', models.CharField(max_length=255)),
                ('contact_type', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('address', 'Address'), ('other', 'Other')], default='email', max_length=20)),
                ('contact_value', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='ExternalContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_name', models.CharField(max_length=255)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='external_contact_details', to=settings.AUTH_USER_MODEL)),
                ('contact_details', models.ManyToManyField(blank=True, related_name='external_contact', to='cc.externalcontactdetails')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_date', models.DateTimeField(auto_now_add=True)),
                ('maintenance_type', models.CharField(choices=[('routine', 'Routine'), ('emergency', 'Emergency'), ('other', 'Other')], default='routine', max_length=20)),
                ('maintenance_description', models.TextField(blank=True, null=True)),
                ('maintenance_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('pending', 'Pending'), ('in_progress', 'In Progress'), ('requested', 'Requested'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_logs', to=settings.AUTH_USER_MODEL)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_logs', to='cc.instrument')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SupportInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_name', models.CharField(blank=True, max_length=255, null=True)),
                ('manufacturer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('manufacturer_contacts', models.ManyToManyField(blank=True, related_name='manufacturer_contact', to='cc.externalcontact')),
                ('vendor_contacts', models.ManyToManyField(blank=True, related_name='vendor_contact', to='cc.externalcontact')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='instrument',
            name='support_information',
            field=models.ManyToManyField(blank=True, to='cc.supportinformation'),
        ),
    ]
