# CUPCAKE PostgreSQL Configuration for Raspberry Pi 5
# Optimized for low-power, limited memory environment

# Connection Settings
listen_addresses = 'localhost'
port = 5432
max_connections = 50
superuser_reserved_connections = 3

# Memory Settings (optimized for 4-8GB Pi)
shared_buffers = 256MB              # ~25% of RAM for 1GB, adjust based on actual RAM
effective_cache_size = 1GB          # ~75% of RAM
work_mem = 8MB                      # Per operation memory
maintenance_work_mem = 64MB         # For maintenance operations
autovacuum_work_mem = 64MB         # For autovacuum

# Checkpoint Settings
checkpoint_timeout = 15min
checkpoint_completion_target = 0.9
max_wal_size = 512MB
min_wal_size = 128MB
wal_buffers = 16MB

# Query Optimization
random_page_cost = 4.0             # Higher for SD card storage
seq_page_cost = 1.0
default_statistics_target = 100
constraint_exclusion = partition
cpu_tuple_cost = 0.01
cpu_index_tuple_cost = 0.005
cpu_operator_cost = 0.0025

# Background Writer (tuned for SD card)
bgwriter_delay = 200ms
bgwriter_lru_maxpages = 100
bgwriter_lru_multiplier = 2.0
bgwriter_flush_after = 256kB

# WAL Settings
wal_level = replica
wal_compression = on
wal_log_hints = off
archive_mode = off
fsync = on
synchronous_commit = on
wal_sync_method = fdatasync
full_page_writes = on
wal_writer_delay = 200ms
wal_writer_flush_after = 1MB

# Autovacuum (aggressive for small datasets)
autovacuum = on
autovacuum_max_workers = 2
autovacuum_naptime = 1min
autovacuum_vacuum_threshold = 50
autovacuum_vacuum_scale_factor = 0.2
autovacuum_analyze_threshold = 50
autovacuum_analyze_scale_factor = 0.1
autovacuum_vacuum_cost_delay = 20ms
autovacuum_vacuum_cost_limit = 200

# Logging (minimal for performance)
logging_collector = on
log_destination = 'stderr'
log_directory = '/var/log/postgresql'
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_file_mode = 0640
log_rotation_age = 1d
log_rotation_size = 10MB
log_truncate_on_rotation = on

# What to log
log_min_duration_statement = 1000  # Log slow queries (>1s)
log_checkpoints = on
log_connections = off
log_disconnections = off
log_lock_waits = on
log_temp_files = 0
log_autovacuum_min_duration = 0
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '

# Lock Management
deadlock_timeout = 1s
lock_timeout = 30s
statement_timeout = 300s           # 5 minute query timeout
idle_in_transaction_session_timeout = 600s

# Parallel Processing (limited for Pi)
max_worker_processes = 4
max_parallel_workers = 2
max_parallel_workers_per_gather = 1
max_parallel_maintenance_workers = 1

# Misc Settings
timezone = 'UTC'
datestyle = 'iso, mdy'
default_text_search_config = 'pg_catalog.english'

# Shared Libraries
shared_preload_libraries = ''

# Error Handling
restart_after_crash = on
exit_on_error = off

# Client Connection Defaults
search_path = '"$user", public'
default_transaction_isolation = 'read committed'
default_transaction_read_only = off
default_transaction_deferrable = off
session_replication_role = 'origin'

# Performance Monitoring
track_activities = on
track_counts = on
track_io_timing = off              # Disable for performance
track_functions = none
stats_temp_directory = 'pg_stat_tmp'

# Cost-based vacuum settings
vacuum_cost_delay = 0
vacuum_cost_page_hit = 1
vacuum_cost_page_miss = 10
vacuum_cost_page_dirty = 20
vacuum_cost_limit = 200

# Security Settings
ssl = off                          # Disable SSL for local connections
password_encryption = scram-sha-256
row_security = on

# Connection Pooling (if using pgbouncer)
# max_prepared_transactions = 0

# Raspberry Pi specific optimizations
# Reduce disk I/O
fsync = on                         # Keep on for data safety
synchronous_commit = on            # Keep on for consistency
full_page_writes = on              # Necessary for crash recovery

# Memory allocation
dynamic_shared_memory_type = posix
huge_pages = try                   # Try to use huge pages if available

# Temp file settings
temp_file_limit = -1               # No limit on temp files
temp_buffers = 8MB

# Archive settings (disabled for performance)
archive_mode = off
archive_command = ''

# Hot standby settings (not needed for single Pi)
hot_standby = off
max_standby_archive_delay = 30s
max_standby_streaming_delay = 30s
wal_receiver_status_interval = 10s
hot_standby_feedback = off

# Replication (disabled for single Pi)
max_wal_senders = 0
max_replication_slots = 0

# Additional Pi-specific settings
# Optimize for smaller datasets and limited I/O
effective_io_concurrency = 1      # SD card doesn't benefit from high concurrency
maintenance_io_concurrency = 1     # Single maintenance I/O thread